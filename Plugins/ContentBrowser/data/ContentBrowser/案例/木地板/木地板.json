{
    "type": "QHoudiniNodeWidget",
    "data": "kwargs = {'toolname': 'geo', 'panename': '', 'altclick': False, 'ctrlclick': False,            'shiftclick': False, 'cmdclick': False, 'pane': None, 'viewport': None, 'inputnodename': '',            'outputindex': -1, 'inputs': [], 'outputnodename': '', 'inputindex': -1, 'outputs': [],            'branch': False, 'autoplace': False, 'requestnew': False}\nimport hou\n\nimport sys\nimport toolutils\n\noutputitem = None\ninputindex = -1\ninputitem = None\noutputindex = -1\n\nnum_args = 1\nh_extra_args = ''\npane = toolutils.activePane(kwargs)\nif not isinstance(pane, hou.NetworkEditor):\n    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)\n    if pane is None:\n       hou.ui.displayMessage(\n               'Cannot create node: cannot find any network pane')\n       sys.exit(0)\nelse: # We're creating this tool from the TAB menu inside a network editor\n    pane_node = pane.pwd()\n    if \"outputnodename\" in kwargs and \"inputindex\" in kwargs:\n        outputitem = pane_node.item(kwargs[\"outputnodename\"])\n        inputindex = kwargs[\"inputindex\"]\n        h_extra_args += 'set arg4 = \"' + kwargs[\"outputnodename\"] + '\"\\n'\n        h_extra_args += 'set arg5 = \"' + str(inputindex) + '\"\\n'\n        num_args = 6\n    if \"inputnodename\" in kwargs and \"outputindex\" in kwargs:\n        inputitem = pane_node.item(kwargs[\"inputnodename\"])\n        outputindex = kwargs[\"outputindex\"]\n        h_extra_args += 'set arg6 = \"' + kwargs[\"inputnodename\"] + '\"\\n'\n        h_extra_args += 'set arg9 = \"' + str(outputindex) + '\"\\n'\n        num_args = 9\n    if \"autoplace\" in kwargs:\n        autoplace = kwargs[\"autoplace\"]\n    else:\n        autoplace = False\n    # If shift-clicked we want to auto append to the current\n    # node\n    if \"shiftclick\" in kwargs and kwargs[\"shiftclick\"]:\n        if inputitem is None:\n            inputitem = pane.currentNode()\n            outputindex = 0\n    if \"nodepositionx\" in kwargs and             \"nodepositiony\" in kwargs:\n        try:\n            pos = [ float( kwargs[\"nodepositionx\"] ),\n                    float( kwargs[\"nodepositiony\"] )]\n        except:\n            pos = None\n    else:\n        pos = None\n\n    if not autoplace and not pane.listMode():\n        if pos is not None:\n            pass\n        elif outputitem is None:\n            pos = pane.selectPosition(inputitem, outputindex, None, -1)\n        else:\n            pos = pane.selectPosition(inputitem, outputindex,\n                                      outputitem, inputindex)\n\n    if pos is not None:\n        if \"node_bbox\" in kwargs:\n            size = kwargs[\"node_bbox\"]\n            pos[0] -= size[0] / 2\n            pos[1] -= size[1] / 2\n        else:\n            pos[0] -= 0.573625\n            pos[1] -= 0.220625\n        h_extra_args += 'set arg2 = \"' + str(pos[0]) + '\"\\n'\n        h_extra_args += 'set arg3 = \"' + str(pos[1]) + '\"\\n'\nh_extra_args += 'set argc = \"' + str(num_args) + '\"\\n'\n\npane_node = pane.pwd()\nchild_type = pane_node.childTypeCategory().nodeTypes()\n\nif 'geo' not in child_type:\n   hou.ui.displayMessage(\n           'Cannot create node: incompatible pane network type')\n   sys.exit(0)\n\n# First clear the node selection\npane_node.setSelected(False, True)\n\nh_path = pane_node.path()\nh_preamble = 'set arg1 = \"' + h_path + '\"\\n'\nh_cmd = r'''\nif ($argc < 2 || \"$arg2\" == \"\") then\n   set arg2 = 0\nendif\nif ($argc < 3 || \"$arg3\" == \"\") then\n   set arg3 = 0\nendif\n# Automatically generated script\n# $arg1 - the path to add this node\n# $arg2 - x position of the tile\n# $arg3 - y position of the tile\n# $arg4 - input node to wire to\n# $arg5 - which input to wire to\n# $arg6 - output node to wire to\n# $arg7 - the type of this node\n# $arg8 - the node is an indirect input\n# $arg9 - index of output from $arg6\n\n\\set noalias = 1\nset saved_path = `execute(\"oppwf\")`\nopcf $arg1\n\n# Node $_obj_geo2 (Object/geo)\nset _obj_geo2 = `run(\"opadd -e -n -v geo geo2\")`\noplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo2\nopspareds '    group {         name    \"stdswitcher4\"         label   \"Transform\"          parm {             name    \"xOrd\"             baseparm             label   \"Transform Order\"             joinnext             export  none         }         parm {             name    \"rOrd\"             baseparm             label   \"Rotate Order\"             nolabel             export  none         }         parm {             name    \"t\"             baseparm             label   \"Translate\"             export  all         }         parm {             name    \"r\"             baseparm             label   \"Rotate\"             export  all         }         parm {             name    \"s\"             baseparm             label   \"Scale\"             export  none         }         parm {             name    \"p\"             baseparm             label   \"Pivot Translate\"             export  none         }         parm {             name    \"pr\"             baseparm             label   \"Pivot Rotate\"             export  none         }         parm {             name    \"scale\"             baseparm             label   \"Uniform Scale\"             export  none         }         parm {             name    \"pre_xform\"             baseparm             label   \"Modify Pre-Transform\"             export  none         }         parm {             name    \"keeppos\"             baseparm             label   \"Keep Position When Parenting\"             export  none         }         parm {             name    \"childcomp\"             baseparm             label   \"Child Compensation\"             export  none         }         parm {             name    \"constraints_on\"             baseparm             label   \"Enable Constraints\"             export  none         }         parm {             name    \"constraints_path\"             baseparm             label   \"Constraints\"             export  none         }         parm {             name    \"lookatpath\"             baseparm             label   \"Look At\"             invisible             export  none         }         parm {             name    \"lookupobjpath\"             baseparm             label   \"Look Up Object\"             invisible             export  none         }         parm {             name    \"lookup\"             baseparm             label   \"Look At Up Vector\"             invisible             export  none         }         parm {             name    \"pathobjpath\"             baseparm             label   \"Path Object\"             invisible             export  none         }         parm {             name    \"roll\"             baseparm             label   \"Roll\"             invisible             export  none         }         parm {             name    \"pos\"             baseparm             label   \"Position\"             invisible             export  none         }         parm {             name    \"uparmtype\"             baseparm             label   \"Parameterization\"             invisible             export  none         }         parm {             name    \"pathorient\"             baseparm             label   \"Orient Along Path\"             invisible             export  none         }         parm {             name    \"up\"             baseparm             label   \"Orient Up Vector\"             invisible             export  none         }         parm {             name    \"bank\"             baseparm             label   \"Auto-Bank factor\"             invisible             export  none         }     }      group {         name    \"stdswitcher4_1\"         label   \"Render\"          parm {             name    \"shop_materialpath\"             baseparm             label   \"Material\"             export  none         }         parm {             name    \"shop_materialopts\"             baseparm             label   \"Options\"             invisible             export  none         }         parm {             name    \"tdisplay\"             baseparm             label   \"Display\"             joinnext             export  none         }         parm {             name    \"display\"             baseparm             label   \"Display\"             export  none         }         parm {             name    \"viewportlod\"             label   \"Display As\"             type    ordinal             default { \"full\" }             help    \"Choose how the object\\'s geometry should be rendered in the viewport\"             menu {                 \"full\"      \"Full Geometry\"                 \"points\"    \"Point Cloud\"                 \"box\"       \"Bounding Box\"                 \"centroid\"  \"Centroid\"                 \"hidden\"    \"Hidden\"                 \"subd\"      \"Subdivision Surface / Curves\"             }             parmtag { \"spare_category\" \"Render\" }         }         parm {             name    \"vm_rendervisibility\"             label   \"Render Visibility\"             type    string             default { \"*\" }             menureplace {                 \"*\"                             \"Visible to all\"                 \"primary\"                       \"Visible only to primary rays\"                 \"primary|shadow\"                \"Visible only to primary and shadow rays\"                 \"-primary\"                      \"Invisible to primary rays (Phantom)\"                 \"-diffuse\"                      \"Invisible to diffuse rays\"                 \"-diffuse&-reflect&-refract\"    \"Invisible to secondary rays\"                 \"\"                              \"Invisible (Unrenderable)\"             }             parmtag { \"mantra_class\" \"object\" }             parmtag { \"mantra_name\" \"rendervisibility\" }             parmtag { \"spare_category\" \"Render\" }         }         parm {             name    \"vm_rendersubd\"             label   \"Render Polygons As Subdivision (Mantra)\"             type    toggle             default { \"0\" }             parmtag { \"mantra_class\" \"object\" }             parmtag { \"mantra_name\" \"rendersubd\" }             parmtag { \"spare_category\" \"Geometry\" }         }         parm {             name    \"vm_subdstyle\"             label   \"Subdivision Style\"             type    string             default { \"mantra_catclark\" }             hidewhen \"{ vm_rendersubd == 0 }\"             menu {                 \"mantra_catclark\"   \"Mantra Catmull-Clark\"                 \"osd_catclark\"      \"OpenSubdiv Catmull-Clark\"             }             parmtag { \"mantra_class\" \"object\" }             parmtag { \"mantra_name\" \"subdstyle\" }             parmtag { \"spare_category\" \"Geometry\" }         }         parm {             name    \"vm_subdgroup\"             label   \"Subdivision Group\"             type    string             default { \"\" }             hidewhen \"{ vm_rendersubd == 0 }\"             parmtag { \"mantra_class\" \"object\" }             parmtag { \"mantra_name\" \"subdgroup\" }             parmtag { \"spare_category\" \"Geometry\" }         }         parm {             name    \"vm_osd_quality\"             label   \"Open Subdiv Quality\"             type    float             default { \"1\" }             hidewhen \"{ vm_rendersubd == 0 vm_subdstyle != osd_catclark }\"             range   { 0 10 }             parmtag { \"mantra_class\" \"object\" }             parmtag { \"mantra_name\" \"osd_quality\" }             parmtag { \"spare_category\" \"Geometry\" }         }         parm {             name    \"vm_osd_vtxinterp\"             label   \"OSD Vtx Interp\"             type    integer             default { \"2\" }             hidewhen \"{ vm_rendersubd == 0 vm_subdstyle != osd_catclark }\"             menu {                 \"0\" \"No vertex interpolation\"                 \"1\" \"Edges only\"                 \"2\" \"Edges and Corners\"             }             range   { 0 10 }             parmtag { \"mantra_class\" \"object\" }             parmtag { \"mantra_name\" \"osd_vtxinterp\" }             parmtag { \"spare_category\" \"Geometry\" }         }         parm {             name    \"vm_osd_fvarinterp\"             label   \"OSD FVar Interp\"             type    integer             default { \"4\" }             hidewhen \"{ vm_rendersubd == 0 vm_subdstyle != osd_catclark }\"             menu {                 \"0\" \"Smooth everywhere\"                 \"1\" \"Sharpen corners only\"                 \"2\" \"Sharpen edges and corners\"                 \"3\" \"Sharpen edges and propagated corners\"                 \"4\" \"Sharpen all boundaries\"                 \"5\" \"Bilinear interpolation\"             }             range   { 0 10 }             parmtag { \"mantra_class\" \"object\" }             parmtag { \"mantra_name\" \"osd_fvarinterp\" }             parmtag { \"spare_category\" \"Geometry\" }         }         group {             name    \"folder0\"             label   \"Shading\"              parm {                 name    \"categories\"                 label   \"Categories\"                 type    string                 default { \"\" }                 help    \"A list of tags which can be used to select the object\"                 parmtag { \"spare_category\" \"Shading\" }             }             parm {                 name    \"reflectmask\"                 label   \"Reflection Mask\"                 type    oplist                 default { \"*\" }                 help    \"Objects that will be reflected on this object.\"                 parmtag { \"opexpand\" \"1\" }                 parmtag { \"opfilter\" \"!!OBJ/GEOMETRY!!\" }                 parmtag { \"oprelative\" \"/obj\" }                 parmtag { \"spare_category\" \"Shading\" }             }             parm {                 name    \"refractmask\"                 label   \"Refraction Mask\"                 type    oplist                 default { \"*\" }                 help    \"Objects that will be refracted on this object.\"                 parmtag { \"opexpand\" \"1\" }                 parmtag { \"opfilter\" \"!!OBJ/GEOMETRY!!\" }                 parmtag { \"oprelative\" \"/obj\" }                 parmtag { \"spare_category\" \"Shading\" }             }             parm {                 name    \"lightmask\"                 label   \"Light Mask\"                 type    oplist                 default { \"*\" }                 help    \"Lights that illuminate this object.\"                 parmtag { \"opexpand\" \"1\" }                 parmtag { \"opfilter\" \"!!OBJ/LIGHT!!\" }                 parmtag { \"oprelative\" \"/obj\" }                 parmtag { \"spare_category\" \"Shading\" }             }             parm {                 name    \"lightcategories\"                 label   \"Light Selection\"                 type    string                 default { \"*\" }                 parmtag { \"spare_category\" \"Shading\" }             }             parm {                 name    \"vm_lpetag\"                 label   \"LPE Tag\"                 type    string                 default { \"\" }                 parmtag { \"mantra_class\" \"object\" }                 parmtag { \"mantra_name\" \"lpetag\" }                 parmtag { \"spare_category\" \"Shading\" }             }             parm {                 name    \"vm_volumefilter\"                 label   \"Volume Filter\"                 type    string                 default { \"box\" }                 menu {                     \"box\"       \"Box Filter\"                     \"gaussian\"  \"Gaussian\"                     \"bartlett\"  \"Bartlett (triangle)\"                     \"catrom\"    \"Catmull-Rom\"                     \"hanning\"   \"Hanning\"                     \"blackman\"  \"Blackman\"                     \"sinc\"      \"Sinc (sharpening)\"                 }                 parmtag { \"mantra_class\" \"object\" }                 parmtag { \"mantra_name\" \"filter\" }                 parmtag { \"spare_category\" \"Shading\" }             }             parm {                 name    \"vm_volumefilterwidth\"                 label   \"Volume Filter Width\"                 type    float                 default { \"1\" }                 range   { 0.001 5 }                 parmtag { \"mantra_class\" \"object\" }                 parmtag { \"mantra_name\" \"filterwidth\" }                 parmtag { \"spare_category\" \"Shading\" }             }             parm {                 name    \"vm_matte\"                 label   \"Matte shading\"                 type    toggle                 default { \"0\" }                 parmtag { \"mantra_class\" \"object\" }                 parmtag { \"mantra_name\" \"matte\" }                 parmtag { \"spare_category\" \"Shading\" }             }             parm {                 name    \"vm_rayshade\"                 label   \"Raytrace Shading\"                 type    toggle                 default { \"0\" }                 parmtag { \"mantra_class\" \"object\" }                 parmtag { \"mantra_name\" \"rayshade\" }                 parmtag { \"spare_category\" \"Shading\" }             }         }          group {             name    \"folder0_1\"             label   \"Sampling\"              parm {                 name    \"geo_velocityblur\"                 label   \"Geometry Velocity Blur\"                 type    ordinal                 default { \"off\" }                 disablewhen \"{ allowmotionblur == 0 }\"                 menu {                     \"off\"       \"No Velocity Blur\"                     \"on\"        \"Velocity Blur\"                     \"accelblur\" \"Acceleration Blur\"                 }             }             parm {                 name    \"geo_accelattribute\"                 label   \"Acceleration Attribute\"                 type    string                 default { \"accel\" }                 hidewhen \"{ geo_velocityblur != accelblur }\"                 parmtag { \"spare_category\" \"Sampling\" }             }         }          group {             name    \"folder0_2\"             label   \"Dicing\"              parm {                 name    \"vm_shadingquality\"                 label   \"Shading Quality\"                 type    float                 default { \"1\" }                 range   { 0 10 }                 parmtag { \"mantra_class\" \"object\" }                 parmtag { \"mantra_name\" \"shadingquality\" }                 parmtag { \"spare_category\" \"Dicing\" }             }             parm {                 name    \"vm_flatness\"                 label   \"Dicing Flatness\"                 type    float                 default { \"0.05\" }                 range   { 0 1 }                 parmtag { \"mantra_class\" \"object\" }                 parmtag { \"mantra_name\" \"flatness\" }                 parmtag { \"spare_category\" \"Dicing\" }             }             parm {                 name    \"vm_raypredice\"                 label   \"Ray Predicing\"                 type    integer                 default { \"0\" }                 menu {                     \"0\" \"Disable Predicing\"                     \"1\" \"Full Predicing\"                     \"2\" \"Precompute Bounds\"                 }                 range   { 0 10 }                 parmtag { \"mantra_class\" \"object\" }                 parmtag { \"mantra_name\" \"raypredice\" }                 parmtag { \"spare_category\" \"Dicing\" }             }             parm {                 name    \"vm_curvesurface\"                 label   \"Shade Curves As Surfaces\"                 type    toggle                 default { \"0\" }                 parmtag { \"mantra_class\" \"object\" }                 parmtag { \"mantra_name\" \"curvesurface\" }                 parmtag { \"spare_category\" \"Dicing\" }             }         }          group {             name    \"folder0_3\"             label   \"Geometry\"              parm {                 name    \"vm_rmbackface\"                 label   \"Backface Removal\"                 type    toggle                 default { \"0\" }                 parmtag { \"mantra_class\" \"object\" }                 parmtag { \"mantra_name\" \"rmbackface\" }                 parmtag { \"spare_category\" \"Geometry\" }             }             parm {                 name    \"shop_geometrypath\"                 label   \"Procedural Shader\"                 type    oppath                 default { \"\" }                 parmtag { \"opfilter\" \"!!SHOP/GEOMETRY!!\" }                 parmtag { \"oprelative\" \".\" }                 parmtag { \"spare_category\" \"Geometry\" }             }             parm {                 name    \"vm_forcegeometry\"                 label   \"Force Procedural Geometry Output\"                 type    toggle                 default { \"1\" }                 parmtag { \"spare_category\" \"Geometry\" }             }             parm {                 name    \"vm_rendersubdcurves\"                 label   \"Render Polygon Curves As Subdivision (Mantra)\"                 type    toggle                 default { \"0\" }                 parmtag { \"mantra_class\" \"object\" }                 parmtag { \"mantra_name\" \"rendersubdcurves\" }                 parmtag { \"spare_category\" \"Geometry\" }             }             parm {                 name    \"vm_renderpoints\"                 label   \"Render As Points (Mantra)\"                 type    integer                 default { \"2\" }                 menu {                     \"0\" \"No Point Rendering\"                     \"1\" \"Render Only Points\"                     \"2\" \"Render Unconnected Points\"                 }                 range   { 0 10 }                 parmtag { \"mantra_class\" \"object\" }                 parmtag { \"mantra_name\" \"renderpoints\" }                 parmtag { \"spare_category\" \"Geometry\" }             }             parm {                 name    \"vm_renderpointsas\"                 label   \"Render Points As (Mantra)\"                 type    integer                 default { \"0\" }                 disablewhen \"{ vm_renderpoints == 0 }\"                 menu {                     \"0\" \"Spheres\"                     \"1\" \"Circles\"                 }                 range   { 0 10 }                 parmtag { \"mantra_class\" \"object\" }                 parmtag { \"mantra_name\" \"renderpointsas\" }                 parmtag { \"spare_category\" \"Geometry\" }             }             parm {                 name    \"vm_usenforpoints\"                 label   \"Use N For Point Rendering\"                 type    toggle                 default { \"0\" }                 disablewhen \"{ vm_renderpoints == 0 }\"                 parmtag { \"mantra_class\" \"object\" }                 parmtag { \"mantra_name\" \"usenforpoints\" }                 parmtag { \"spare_category\" \"Geometry\" }             }             parm {                 name    \"vm_pointscale\"                 label   \"Point Scale\"                 type    float                 default { \"1\" }                 disablewhen \"{ vm_renderpoints == 0 }\"                 range   { 0! 10 }                 parmtag { \"mantra_class\" \"object\" }                 parmtag { \"mantra_name\" \"pointscale\" }                 parmtag { \"spare_category\" \"Geometry\" }             }             parm {                 name    \"vm_pscalediameter\"                 label   \"Treat Point Scale as Diameter Instead of Radius\"                 type    toggle                 default { \"0\" }                 parmtag { \"mantra_class\" \"object\" }                 parmtag { \"mantra_name\" \"pscalediameter\" }                 parmtag { \"spare_category\" \"Geometry\" }             }             parm {                 name    \"vm_metavolume\"                 label   \"Metaballs as Volume\"                 type    toggle                 default { \"0\" }                 parmtag { \"mantra_class\" \"object\" }                 parmtag { \"mantra_name\" \"metavolume\" }                 parmtag { \"spare_category\" \"Geometry\" }             }             parm {                 name    \"vm_coving\"                 label   \"Coving\"                 type    integer                 default { \"1\" }                 menu {                     \"0\" \"Disable Coving\"                     \"1\" \"Coving for displacement/sub-d\"                     \"2\" \"Coving for all primitives\"                 }                 range   { 0 10 }                 parmtag { \"mantra_class\" \"object\" }                 parmtag { \"mantra_name\" \"coving\" }                 parmtag { \"spare_category\" \"Geometry\" }             }             parm {                 name    \"vm_materialoverride\"                 label   \"Material Override\"                 type    string                 default { \"compact\" }                 menu {                     \"none\"      \"Disabled\"                     \"full\"      \"Evaluate for Each Primitve/Point\"                     \"compact\"   \"Evaluate Once\"                 }                 parmtag { \"spare_category\" \"Geometry\" }             }             parm {                 name    \"vm_overridedetail\"                 label   \"Ignore Geometry Attribute Shaders\"                 type    toggle                 default { \"0\" }                 parmtag { \"mantra_class\" \"object\" }                 parmtag { \"mantra_name\" \"overridedetail\" }                 parmtag { \"spare_category\" \"Geometry\" }             }             parm {                 name    \"vm_procuseroottransform\"                 label   \"Proc Use Root Transform\"                 type    toggle                 default { \"1\" }                 parmtag { \"mantra_class\" \"object\" }                 parmtag { \"mantra_name\" \"procuseroottransform\" }                 parmtag { \"spare_category\" \"Geometry\" }             }         }      }      group {         name    \"stdswitcher4_2\"         label   \"Misc\"          parm {             name    \"use_dcolor\"             baseparm             label   \"Set Wireframe Color\"             export  none         }         parm {             name    \"dcolor\"             baseparm             label   \"Wireframe Color\"             export  none         }         parm {             name    \"picking\"             baseparm             label   \"Viewport Selecting Enabled\"             export  none         }         parm {             name    \"pickscript\"             baseparm             label   \"Select Script\"             export  none         }         parm {             name    \"caching\"             baseparm             label   \"Cache Object Transform\"             export  none         }         parm {             name    \"vport_shadeopen\"             baseparm             label   \"Shade Open Curves In Viewport\"             export  none         }         parm {             name    \"vport_displayassubdiv\"             baseparm             label   \"Display as Subdivision in Viewport\"             invisible             export  none         }         parm {             name    \"vport_onionskin\"             baseparm             label   \"Onion Skinning\"             export  none         }     }  ' $_obj_geo2\nopset -S on $_obj_geo2\nchautoscope $_obj_geo2 +tx +ty +tz +rx +ry +rz +sx +sy +sz\nopset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -x off $_obj_geo2\nopexprlanguage -s hscript $_obj_geo2\nopcf $_obj_geo2\n\n# Node $_obj_geo2_clean3 (Sop/clean)\nset _obj_geo2_clean3 = `run(\"opadd -e -n -v clean clean3\")`\noplocate -x `$arg2 + -7.5614029411966817` -y `$arg3 + 13.273564117647059` $_obj_geo2_clean3\nopparm $_obj_geo2_clean3 dodelattribs ( on ) delattribs ( roof_max ) dodelgroups ( on )\nchautoscope $_obj_geo2_clean3 +delete_small\nopset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo2_clean3\nopexprlanguage -s hscript $_obj_geo2_clean3\nopuserdata -n '___Version___' -v '' $_obj_geo2_clean3\n\n# Node $_obj_geo2_clean4 (Sop/clean)\nset _obj_geo2_clean4 = `run(\"opadd -e -n -v clean clean4\")`\noplocate -x `$arg2 + -7.5614029547186474` -y `$arg3 + -2.4729447058823526` $_obj_geo2_clean4\nopparm $_obj_geo2_clean4 dodelattribs ( on ) delattribs ( '* ^uv ^N' ) dodelgroups ( on )\nchautoscope $_obj_geo2_clean4 +delete_small\nopset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo2_clean4\nopexprlanguage -s hscript $_obj_geo2_clean4\nopuserdata -n '___Version___' -v '' $_obj_geo2_clean4\nopcf ..\nopcf $_obj_geo2\n\n# Node $_obj_geo2_del_shared_edge (Sop/divide)\nset _obj_geo2_del_shared_edge = `run(\"opadd -e -n -v divide del_shared_edge\")`\noplocate -x `$arg2 + -7.5614029411966817` -y `$arg3 + 12.230244117647057` $_obj_geo2_del_shared_edge\nopparm -V 19.0.383 $_obj_geo2_del_shared_edge convex ( off ) size ( 0.5 0.5 0.5 ) removesh ( on )\nopset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo2_del_shared_edge\nopexprlanguage -s hscript $_obj_geo2_del_shared_edge\nopuserdata -n '___Version___' -v '19.0.383' $_obj_geo2_del_shared_edge\n\n# Node $_obj_geo2_divide_x (Sop/divide)\nset _obj_geo2_divide_x = `run(\"opadd -e -n -v divide divide_x\")`\noplocate -x `$arg2 + -7.5614029411966817` -y `$arg3 + 10.104718235294119` $_obj_geo2_divide_x\nopparm -V 19.0.383 $_obj_geo2_divide_x convex ( off ) brick ( on ) size ( 0.20000000000000001 1 10 )\nopset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo2_divide_x\nopexprlanguage -s hscript $_obj_geo2_divide_x\nopuserdata -n '___Version___' -v '19.0.383' $_obj_geo2_divide_x\n\n# Node $_obj_geo2_attr_type (Sop/attribwrangle)\nset _obj_geo2_attr_type = `run(\"opadd -e -n -v attribwrangle attr_type\")`\noplocate -x `$arg2 + -7.5644029411966818` -y `$arg3 + 7.9505682352941172` $_obj_geo2_attr_type\nopparm $_obj_geo2_attr_type  bindings ( 0 ) groupbindings ( 0 )\nopparm $_obj_geo2_attr_type class ( detail ) snippet ( 'int n = nprimitives(0);\\nint num_style = 3;\\nint prs[], src[], even[];\\nresize(src, n);\\nresize(even, n);\\nfor(int i=1; i<n; i++) {\\n    prs = sort(polyneighbours(0, i));\\n    setprimattrib(0, \"piece\", i, i, \"set\");\\n    if (prs[0] < i) {\\n        even[i] = (even[src[i]] + 1) % num_style;\\n        setprimattrib(0, \"type\", i, even[i], \"set\");\\n    }\\n    \\n    foreach(int pr; prs) {\\n        if (pr > i) {\\n            src[pr] = i;\\n        }\\n    }\\n}' )\nopset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo2_attr_type\nopexprlanguage -s hscript $_obj_geo2_attr_type\nopuserdata -n '___Version___' -v '' $_obj_geo2_attr_type\n\n# Node $_obj_geo2_sort_before_AW (Sop/sort)\nset _obj_geo2_sort_before_AW = `run(\"opadd -e -n -v sort sort_before_AW\")`\noplocate -x `$arg2 + -7.5614029411966817` -y `$arg3 + 9.0724182352941192` $_obj_geo2_sort_before_AW\nopparm -V 19.0.383 $_obj_geo2_sort_before_AW primsort ( byx )\nopset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo2_sort_before_AW\nopexprlanguage -s hscript $_obj_geo2_sort_before_AW\nopuserdata -n '___Version___' -v '19.0.383' $_obj_geo2_sort_before_AW\n\n# Node $_obj_geo2_del_inline_pt (Sop/facet)\nset _obj_geo2_del_inline_pt = `run(\"opadd -e -n -v facet del_inline_pt\")`\noplocate -x `$arg2 + -7.5614029411966817` -y `$arg3 + 11.230244117647059` $_obj_geo2_del_inline_pt\nopparm -V 19.0.383 $_obj_geo2_del_inline_pt inline ( on )\nopset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo2_del_inline_pt\nopexprlanguage -s hscript $_obj_geo2_del_inline_pt\nopuserdata -n '___Version___' -v '19.0.383' $_obj_geo2_del_inline_pt\n\n# Node $_obj_geo2_end_type (Sop/block_end)\nset _obj_geo2_end_type = `run(\"opadd -e -n -v block_end end_type\")`\noplocate -x `$arg2 + -7.544902941196681` -y `$arg3 + 4.8671082352941175` $_obj_geo2_end_type\nchblockbegin\nchadd -t 0 0 $_obj_geo2_end_type iterations\nchkey -t 0 -v 10 -m 0 -a 0 -A 0 -T a  -F 'nuniquevals(0, D_PRIMITIVE, \"type\")' $_obj_geo2_end_type/iterations\nchblockend\nopparm -V 19.0.383 $_obj_geo2_end_type itermethod ( count ) iterations ( iterations ) startvalue ( 0 ) blockpath ( ../each_type )\nopcolor -c 0.75 0.40000000596046448 0 $_obj_geo2_end_type\nopset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo2_end_type\nopexprlanguage -s hscript $_obj_geo2_end_type\nopuserdata -n '___Version___' -v '19.0.383' $_obj_geo2_end_type\n\n# Node $_obj_geo2_each_type (Sop/block_begin)\nset _obj_geo2_each_type = `run(\"opadd -e -n -v block_begin each_type\")`\noplocate -x `$arg2 + -7.5598029411966818` -y `$arg3 + 6.9021002352941174` $_obj_geo2_each_type\nopparm -V 19.0.383 $_obj_geo2_each_type blockpath ( ../end_type )\nopcolor -c 0.75 0.40000000596046448 0 $_obj_geo2_each_type\nopset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo2_each_type\nopexprlanguage -s hscript $_obj_geo2_each_type\nopuserdata -n '___Version___' -v '19.0.383' $_obj_geo2_each_type\n\n# Node $_obj_geo2_divide_by_type (Sop/divide)\nset _obj_geo2_divide_by_type = `run(\"opadd -e -n -v divide divide_by_type\")`\noplocate -x `$arg2 + -7.5465029411966809` -y `$arg3 + 5.913507455294118` $_obj_geo2_divide_by_type\nchblockbegin\nchadd -t 0 0 $_obj_geo2_divide_by_type offsetz\nchkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '-detail(\"../meta\",\"iteration\", 0)/detail(\"../meta\",\"numiterations\", 0)' $_obj_geo2_divide_by_type/offsetz\nchblockend\nopparm -V 19.0.383 $_obj_geo2_divide_by_type group ( '@type==`detail(\"../meta\",\"iteration\", 0)`' ) convex ( off ) brick ( on ) size ( 10 1 1 ) offset ( 0 0 offsetz ) fixsharededges ( off )\nopset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo2_divide_by_type\nopexprlanguage -s hscript $_obj_geo2_divide_by_type\nopuserdata -n '___Version___' -v '19.0.383' $_obj_geo2_divide_by_type\n\n# Node $_obj_geo2_meta (Sop/block_begin)\nset _obj_geo2_meta = `run(\"opadd -e -n -v block_begin meta\")`\noplocate -x `$arg2 + -9.3877029411966824` -y `$arg3 + 6.9021002352941174` $_obj_geo2_meta\nopparm -V 19.0.383 $_obj_geo2_meta method ( metadata ) blockpath ( ../end_type )\nopcolor -c 0.75 0.40000000596046448 0 $_obj_geo2_meta\nopset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo2_meta\nopexprlanguage -s hscript $_obj_geo2_meta\nopuserdata -n '___Version___' -v '19.0.383' $_obj_geo2_meta\n\n# Node $_obj_geo2_support_uv (Sop/attribwrangle)\nset _obj_geo2_support_uv = `run(\"opadd -e -n -v attribwrangle support_uv\")`\noplocate -x `$arg2 + -7.549502941196681` -y `$arg3 + 2.7879082352941178` $_obj_geo2_support_uv\nopparm $_obj_geo2_support_uv  bindings ( 0 ) groupbindings ( 0 )\nopparm $_obj_geo2_support_uv class ( primitive ) snippet ( 'vector2 uvspace = chu(\"../IN/uvspace\");\\nvector2 size, uv_size, uv_span, uv_offset, uv_pos;\\nvector minpos, maxpos, pos;\\n\\ngetbbox(0, itoa(@primnum), minpos, maxpos);\\nmaxpos -= minpos;\\nsize = set(maxpos.x, maxpos.z);\\nuv_size = size / uvspace;\\nuv_span = 1 - uv_size;\\nuv_offset = fit01(vector2(rand(@primnum, @primnum+7)), {0, 0}, uv_span);\\n\\nint vts[] = primvertices(0, @primnum);\\nint pt;\\nforeach(int vt; vts) {\\n    pt = vertexpoint(0, vt);\\n    pos = point(0, \"P\", pt);\\n    pos = relbbox(0, itoa(@primnum), pos);\\n    uv_pos = set(pos.x, pos.z);\\n    uv_pos *= uv_size;\\n    uv_pos += uv_offset;\\n    setvertexattrib(0, \"uv\", -1, vt, vector(uv_pos), \"set\");\\n}' )\nopset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo2_support_uv\nopexprlanguage -s hscript $_obj_geo2_support_uv\nopuserdata -n '___Version___' -v '' $_obj_geo2_support_uv\n\n# Node $_obj_geo2_boundry_bbox (Sop/polywire)\nset _obj_geo2_boundry_bbox = `run(\"opadd -e -n -v polywire boundry_bbox\")`\noplocate -x `$arg2 + -5.5377029411966818` -y `$arg3 + 10.104718235294119` $_obj_geo2_boundry_bbox\nchblockbegin\nchadd -t 0 0 $_obj_geo2_boundry_bbox segscale1\nchkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '1.0 / $NSEG' $_obj_geo2_boundry_bbox/segscale1\nchadd -t 0 0 $_obj_geo2_boundry_bbox segscale2\nchkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F '1.0 - 1.0 / $NSEG' $_obj_geo2_boundry_bbox/segscale2\nchblockend\nopparm -V 19.0.383 $_obj_geo2_boundry_bbox radius ( 0.050000000000000003 ) div ( 3 )\nopset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo2_boundry_bbox\nopexprlanguage -s hscript $_obj_geo2_boundry_bbox\nopuserdata -n '___Version___' -v '19.0.383' $_obj_geo2_boundry_bbox\n\n# Node $_obj_geo2_group_edge (Sop/groupcreate)\nset _obj_geo2_group_edge = `run(\"opadd -e -n -v groupcreate group_edge\")`\noplocate -x `$arg2 + -7.5465029411966809` -y `$arg3 + 1.7833982352941176` $_obj_geo2_group_edge\nopparm -V 19.0.383 $_obj_geo2_group_edge groupname ( old ) grouptype ( point ) groupbase ( off ) groupbounding ( on ) boundtype ( usebobject )\nopset -d off -r off -h on -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo2_group_edge\nopexprlanguage -s hscript $_obj_geo2_group_edge\nopuserdata -n '___Version___' -v '19.0.383' $_obj_geo2_group_edge\n\n# Node $_obj_geo2_attr_dir (Sop/attribwrangle)\nset _obj_geo2_attr_dir = `run(\"opadd -e -n -v attribwrangle attr_dir\")`\noplocate -x `$arg2 + -7.549502941196681` -y `$arg3 + -0.36369176470588194` $_obj_geo2_attr_dir\nopparm $_obj_geo2_attr_dir  bindings ( 0 ) groupbindings ( 0 )\nopparm $_obj_geo2_attr_dir class ( primitive ) snippet ( 'vector center, pos, dir;\\nint pts[];\\n//float noise = fit01(rand(i@piece + 37), 0.1, 0.5);\\nfloat noise = 0.5;\\npts = primpoints(0, @primnum);\\ncenter = getbbox_center(0, itoa(@primnum));\\nforeach(int pt; pts) {\\n    if (!inpointgroup(0, \"old\", pt)) {\\n        pos = point(0, \"P\", pt);\\n        dir = normalize((center - pos) * {1, 0, 0}) * noise;\\n        setpointattrib(0, \"dir\", pt, dir, \"add\");\\n    }\\n}' )\nopset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo2_attr_dir\nopexprlanguage -s hscript $_obj_geo2_attr_dir\nopuserdata -n '___Version___' -v '' $_obj_geo2_attr_dir\n\n# Node $_obj_geo2_init_dir (Sop/attribcreate::2.0)\nset _obj_geo2_init_dir = `run(\"opadd -e -n -v attribcreate::2.0 init_dir\")`\noplocate -x `$arg2 + -7.5500029411966816` -y `$arg3 + 0.78071823529411777` $_obj_geo2_init_dir\nopparm $_obj_geo2_init_dir  numattr ( 2 )\nopparm -V 19.0.383 $_obj_geo2_init_dir numattr ( 2 ) name1 ( down ) typeinfo1 ( normal ) size1 ( 3 ) default1v ( 0 -1 0 0 ) writevalues1 ( off ) name2 ( dir ) typeinfo2 ( normal ) size2 ( 3 ) writevalues2 ( off )\nopset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo2_init_dir\nopexprlanguage -s hscript $_obj_geo2_init_dir\nopuserdata -n '___Version___' -v '19.0.383' $_obj_geo2_init_dir\n\n# Node $_obj_geo2_noise (Sop/attribwrangle)\nset _obj_geo2_noise = `run(\"opadd -e -n -v attribwrangle noise\")`\noplocate -x `$arg2 + -7.549502941196681` -y `$arg3 + -1.4928217647058819` $_obj_geo2_noise\nopspareds '    group {         name    \"folder1\"         label   \"Code\"          parm {             name    \"group\"             baseparm             label   \"Group\"             export  none             bindselector uvselect \"Modify Points\"                 \"Select the points to affect and press Enter to complete.\"                 0 1 0xffffffff 0 grouptype 0         }         parm {             name    \"grouptype\"             baseparm             label   \"Group Type\"             export  none         }         parm {             name    \"class\"             baseparm             label   \"Run Over\"             export  none         }         parm {             name    \"vex_numcount\"             baseparm             label   \"Number Count\"             export  none         }         parm {             name    \"vex_threadjobsize\"             baseparm             label   \"Thread Job Size\"             export  none         }         parm {             name    \"snippet\"             baseparm             label   \"VEXpression\"             export  all         }         parm {             name    \"exportlist\"             baseparm             label   \"Attributes to Create\"             export  none         }         parm {             name    \"vex_strict\"             baseparm             label   \"Enforce Prototypes\"             export  none         }     }      group {         name    \"folder1_1\"         label   \"Bindings\"          parm {             name    \"autobind\"             baseparm             label   \"Autobind by Name\"             export  none         }         multiparm {             name    \"bindings\"             label    \"Number of Bindings\"             baseparm             default 0             parmtag { \"autoscope\" \"0000000000000000\" }             parmtag { \"multistartoffset\" \"1\" }              parm {                 name    \"bindname#\"                 baseparm                 label   \"Attribute Name\"                 export  none             }             parm {                 name    \"bindparm#\"                 baseparm                 label   \"VEX Parameter\"                 export  none             }         }          parm {             name    \"groupautobind\"             baseparm             label   \"Autobind Groups by Name\"             export  none         }         multiparm {             name    \"groupbindings\"             label    \"Group Bindings\"             baseparm             default 0             parmtag { \"autoscope\" \"0000000000000000\" }             parmtag { \"multistartoffset\" \"1\" }              parm {                 name    \"bindgroupname#\"                 baseparm                 label   \"Group Name\"                 export  none             }             parm {                 name    \"bindgroupparm#\"                 baseparm                 label   \"VEX Parameter\"                 export  none             }         }          parm {             name    \"vex_cwdpath\"             baseparm             label   \"Evaluation Node Path\"             export  none         }         parm {             name    \"vex_outputmask\"             baseparm             label   \"Export Parameters\"             export  none         }         parm {             name    \"vex_updatenmls\"             baseparm             label   \"Update Normals If Displaced\"             export  none         }         parm {             name    \"vex_matchattrib\"             baseparm             label   \"Attribute to Match\"             export  none         }         parm {             name    \"vex_inplace\"             baseparm             label   \"Compute Results In Place\"             export  none         }         parm {             name    \"vex_selectiongroup\"             baseparm             label   \"Output Selection Group\"             export  none         }         parm {             name    \"vex_precision\"             baseparm             label   \"VEX Precision\"             export  none         }     }      parm {         name    \"amplitude\"         label   \"Amplitude\"         type    float         default { \"0\" }         range   { 0 1 }     }     parm {         name    \"roughness\"         label   \"Roughness\"         type    float         default { \"0\" }         range   { 0 1 }     }     parm {         name    \"n\"         label   \"N\"         type    float         default { \"0\" }         range   { 0 1 }     }     parm {         name    \"turbulence\"         label   \"Turbulence\"         type    integer         default { \"0\" }         range   { 0 10 }     }     parm {         name    \"frequency\"         label   \"Frequency\"         type    vector         size    3         default { \"0\" \"0\" \"0\" }         range   { 0 1 }     }     parm {         name    \"offset\"         label   \"Offset\"         type    vector         size    3         default { \"0\" \"0\" \"0\" }         range   { 0 1 }     } ' $_obj_geo2_noise\nopparm $_obj_geo2_noise  bindings ( 0 ) groupbindings ( 0 )\nopparm $_obj_geo2_noise group ( '* ^old' ) grouptype ( points ) snippet ( 'vector freq=chv(\"frequency\");\\nvector offset=chv(\"offset\");\\nfloat amp=chf(\"amplitude\");\\nint turbulence=chi(\"turbulence\");//定义迭代次数\\nfloat rough=chf(\"roughness\");//定义每次叠加强度缩放值\\nfloat n=chf(\"n\");//定义了每次叠加offset和frequency的倍增量\\n\\nfloat noise = 0;\\nfor(int i=0; i<turbulence; i++){\\n     noise += noise(@P*freq*pow(n,i) - offset*pow(n,i)) * amp * pow(rough,i);\\n}\\n\\n@P += fit01(noise, {0,0,0}, v@dir * 0.01);\\n@P += fit01(noise, v@down * -0.02, v@down * 0.02);' ) amplitude ( 0.79200000000000004 ) roughness ( 0.255 ) n ( 2.1000000000000001 ) turbulence ( 2 ) frequency ( 5 0.20000000000000001 0.20000000000000001 ) offset ( 2 0.29999999999999999 0.10000000000000001 )\nopset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo2_noise\nopexprlanguage -s hscript $_obj_geo2_noise\nopuserdata -n '___Version___' -v '' $_obj_geo2_noise\n\n# Node $_obj_geo2_polyextrude1 (Sop/polyextrude::2.0)\nset _obj_geo2_polyextrude1 = `run(\"opadd -e -n -v polyextrude::2.0 polyextrude1\")`\noplocate -x `$arg2 + -7.5614029547186474` -y `$arg3 + -3.6889947058823536` $_obj_geo2_polyextrude1\nopparm $_obj_geo2_polyextrude1  thicknessramp ( 2 ) twistramp ( 2 )\nopparm -V 19.0.383 $_obj_geo2_polyextrude1 dist ( 0.17999999999999999 ) outputback ( on ) preservegroups ( off ) thicknessramp1value ( 1 ) thicknessramp1interp ( catmull-rom ) thicknessramp2pos ( 1 ) thicknessramp2value ( 1 ) thicknessramp2interp ( catmull-rom ) twistramp1value ( 0.5 ) twistramp1interp ( catmull-rom ) twistramp2pos ( 1 ) twistramp2value ( 0.5 ) twistramp2interp ( catmull-rom )\nopset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo2_polyextrude1\nopexprlanguage -s hscript $_obj_geo2_polyextrude1\nopuserdata -n '___Version___' -v '19.0.383' $_obj_geo2_polyextrude1\n\n# Node $_obj_geo2_normal2 (Sop/normal)\nset _obj_geo2_normal2 = `run(\"opadd -e -n -v normal normal2\")`\noplocate -x `$arg2 + -7.5465029411966809` -y `$arg3 + 3.7809982352941178` $_obj_geo2_normal2\nopparm -V 19.0.383 $_obj_geo2_normal2 cuspangle ( 0 )\nopset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo2_normal2\nopexprlanguage -s hscript $_obj_geo2_normal2\nopuserdata -n '___Version___' -v '19.0.383' $_obj_geo2_normal2\n\n# Node $_obj_geo2_grid1 (Sop/grid)\nset _obj_geo2_grid1 = `run(\"opadd -e -n -v grid grid1\")`\noplocate -x `$arg2 + -7.5614029411966817` -y `$arg3 + 14.54933962948988` $_obj_geo2_grid1\nopset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo2_grid1\nopexprlanguage -s hscript $_obj_geo2_grid1\noporder -e clean3 clean4 del_shared_edge divide_x attr_type sort_before_AW del_inline_pt end_type each_type divide_by_type meta support_uv boundry_bbox group_edge attr_dir init_dir noise polyextrude1 normal2 grid1 \nopcf ..\nopset -p on $_obj_geo2\n\nopcf $arg1\nopcf $_obj_geo2\nopwire -n $_obj_geo2_grid1 -0 $_obj_geo2_clean3\nopwire -n $_obj_geo2_noise -0 $_obj_geo2_clean4\nopwire -n $_obj_geo2_clean3 -0 $_obj_geo2_del_shared_edge\nopwire -n $_obj_geo2_del_inline_pt -0 $_obj_geo2_divide_x\nopwire -n $_obj_geo2_sort_before_AW -0 $_obj_geo2_attr_type\nopwire -n $_obj_geo2_divide_x -0 $_obj_geo2_sort_before_AW\nopwire -n $_obj_geo2_del_shared_edge -0 $_obj_geo2_del_inline_pt\nopwire -n $_obj_geo2_divide_by_type -0 $_obj_geo2_end_type\nopwire -n $_obj_geo2_attr_type -0 $_obj_geo2_each_type\nopwire -n $_obj_geo2_each_type -0 $_obj_geo2_divide_by_type\nopwire -n $_obj_geo2_normal2 -0 $_obj_geo2_support_uv\nopwire -n $_obj_geo2_del_inline_pt -0 $_obj_geo2_boundry_bbox\nopwire -n $_obj_geo2_support_uv -0 $_obj_geo2_group_edge\nopwire -n $_obj_geo2_boundry_bbox -1 $_obj_geo2_group_edge\nopwire -n $_obj_geo2_init_dir -0 $_obj_geo2_attr_dir\nopwire -n $_obj_geo2_group_edge -0 $_obj_geo2_init_dir\nopwire -n $_obj_geo2_attr_dir -0 $_obj_geo2_noise\nopwire -n $_obj_geo2_clean4 -0 $_obj_geo2_polyextrude1\nopwire -n $_obj_geo2_end_type -0 $_obj_geo2_normal2\nopcf ..\n\nset oidx = 0\nif ($argc >= 9 && \"$arg9\" != \"\") then\n    set oidx = $arg9\nendif\n\nif ($argc >= 5 && \"$arg4\" != \"\") then\n    set output = $_obj_geo2\n    opwire -n $output -$arg5 $arg4\nendif\nif ($argc >= 6 && \"$arg6\" != \"\") then\n    set input = $_obj_geo2\n    if ($arg8) then\n        opwire -n -i $arg6 -0 $input\n    else\n        opwire -n -o $oidx $arg6 -0 $input\n    endif\nendif\nopcf $saved_path\n'''\nhou.hscript(h_preamble + h_extra_args + h_cmd)\n"
}