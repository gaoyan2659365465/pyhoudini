[
    {
        "QHTWTextEdit": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\np, li { white-space: pre-wrap; }\n</style></head><body style=\" font-family:'Segoe UI'; font-size:10pt; font-weight:400; font-style:normal;\">\n<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:'Source Sans Pro','Noto Sans CJK JP','Arial','sans-serif'; font-size:15px; color:#000000; background-color:#ffffff;\">将点对齐在一起或将点捕捉到 3D 网格，并可以选择在对齐后融合点</span></p></body></html>"
    },
    {
        "QHWUrlWeb": [
            "Link Button",
            "Link description",
            "http://127.0.0.1:48626/nodes/sop/fuse"
        ]
    },
    {
        "QHWNode": "kwargs = {'toolname': 'geo', 'panename': '', 'altclick': False, 'ctrlclick': False,                'shiftclick': False, 'cmdclick': False, 'pane': None, 'viewport': None, 'inputnodename': '',                'outputindex': -1, 'inputs': [], 'outputnodename': '', 'inputindex': -1, 'outputs': [],                'branch': False, 'autoplace': False, 'requestnew': False}\nimport hou\n\nimport sys\nimport toolutils\n\noutputitem = None\ninputindex = -1\ninputitem = None\noutputindex = -1\n\nnum_args = 1\nh_extra_args = ''\npane = toolutils.activePane(kwargs)\nif not isinstance(pane, hou.NetworkEditor):\n    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)\n    if pane is None:\n       hou.ui.displayMessage(\n               'Cannot create node: cannot find any network pane')\n       sys.exit(0)\nelse: # We're creating this tool from the TAB menu inside a network editor\n    pane_node = pane.pwd()\n    if \"outputnodename\" in kwargs and \"inputindex\" in kwargs:\n        outputitem = pane_node.item(kwargs[\"outputnodename\"])\n        inputindex = kwargs[\"inputindex\"]\n        h_extra_args += 'set arg4 = \"' + kwargs[\"outputnodename\"] + '\"\\n'\n        h_extra_args += 'set arg5 = \"' + str(inputindex) + '\"\\n'\n        num_args = 6\n    if \"inputnodename\" in kwargs and \"outputindex\" in kwargs:\n        inputitem = pane_node.item(kwargs[\"inputnodename\"])\n        outputindex = kwargs[\"outputindex\"]\n        h_extra_args += 'set arg6 = \"' + kwargs[\"inputnodename\"] + '\"\\n'\n        h_extra_args += 'set arg9 = \"' + str(outputindex) + '\"\\n'\n        num_args = 9\n    if \"autoplace\" in kwargs:\n        autoplace = kwargs[\"autoplace\"]\n    else:\n        autoplace = False\n    # If shift-clicked we want to auto append to the current\n    # node\n    if \"shiftclick\" in kwargs and kwargs[\"shiftclick\"]:\n        if inputitem is None:\n            inputitem = pane.currentNode()\n            outputindex = 0\n    if \"nodepositionx\" in kwargs and             \"nodepositiony\" in kwargs:\n        try:\n            pos = [ float( kwargs[\"nodepositionx\"] ),\n                    float( kwargs[\"nodepositiony\"] )]\n        except:\n            pos = None\n    else:\n        pos = None\n\n    if not autoplace and not pane.listMode():\n        if pos is not None:\n            pass\n        elif outputitem is None:\n            pos = pane.selectPosition(inputitem, outputindex, None, -1)\n        else:\n            pos = pane.selectPosition(inputitem, outputindex,\n                                      outputitem, inputindex)\n\n    if pos is not None:\n        if \"node_bbox\" in kwargs:\n            size = kwargs[\"node_bbox\"]\n            pos[0] -= size[0] / 2\n            pos[1] -= size[1] / 2\n        else:\n            pos[0] -= 0.573625\n            pos[1] -= 0.220625\n        h_extra_args += 'set arg2 = \"' + str(pos[0]) + '\"\\n'\n        h_extra_args += 'set arg3 = \"' + str(pos[1]) + '\"\\n'\nh_extra_args += 'set argc = \"' + str(num_args) + '\"\\n'\n\npane_node = pane.pwd()\nchild_type = pane_node.childTypeCategory().nodeTypes()\n\nif 'geo' not in child_type:\n   hou.ui.displayMessage(\n           'Cannot create node: incompatible pane network type')\n   sys.exit(0)\n\n# First clear the node selection\npane_node.setSelected(False, True)\n\nh_path = pane_node.path()\nh_preamble = 'set arg1 = \"' + h_path + '\"\\n'\nh_cmd = r'''\nif ($argc < 2 || \"$arg2\" == \"\") then\n   set arg2 = 0\nendif\nif ($argc < 3 || \"$arg3\" == \"\") then\n   set arg3 = 0\nendif\n# Automatically generated script\n# $arg1 - the path to add this node\n# $arg2 - x position of the tile\n# $arg3 - y position of the tile\n# $arg4 - input node to wire to\n# $arg5 - which input to wire to\n# $arg6 - output node to wire to\n# $arg7 - the type of this node\n# $arg8 - the node is an indirect input\n# $arg9 - index of output from $arg6\n\n\\set noalias = 1\nset saved_path = `execute(\"oppwf\")`\nopcf $arg1\n\n# Node $_obj_FuseHood1_Hood (Object/geo)\nset _obj_FuseHood1_Hood = `run(\"opadd -e -n -v geo Hood\")`\noplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_FuseHood1_Hood\nopset -S on $_obj_FuseHood1_Hood\nopparm -V 19.0.383 $_obj_FuseHood1_Hood stdswitcher ( 2 2 2 ) use_dcolor ( on ) dcolor ( 0 0 0 ) caching ( off )\nchautoscope $_obj_FuseHood1_Hood +tx +ty +tz +rx +ry +rz +sx +sy +sz +px +py +pz +scale\nopcomment -c 'This generator contains the example geometry.' $_obj_FuseHood1_Hood\nopcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_FuseHood1_Hood\nopset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -x off $_obj_FuseHood1_Hood\nopexprlanguage -s hscript $_obj_FuseHood1_Hood\nopuserdata -n '___Version___' -v '19.0.383' $_obj_FuseHood1_Hood\nopcf $_obj_FuseHood1_Hood\n\n# Node $_obj_FuseHood1_Hood_side_panel (Sop/curve)\nset _obj_FuseHood1_Hood_side_panel = `run(\"opadd -e -n -v curve side_panel\")`\noplocate -x `$arg2 + -9.9587800000000009` -y `$arg3 + 23.376799999999999` $_obj_FuseHood1_Hood_side_panel\nopparm -V 19.0.383 $_obj_FuseHood1_Hood_side_panel coords ( 'p10 p9 p8 p7 p6 0.629255,0.400884,0.644929 0.651047,0.303712,0.659689 0.68646,0.167178,0.643699 0.683736,0.167178,0.69167 0.689184,0.302482,0.751941 0.689184,0.350453,0.801143 0.68646,0.397194,0.902005 0.683736,0.399654,1.00164 0.683736,0.363287,1.10479 0.678288,0.282801,1.18983 0.667392,0.157338,1.2378 0.640151,0.153648,1.32883 0.626531,0.25451,1.35097 ' ) close ( on ) tolerance ( 0.0099999997799999994 )\nopcomment -c 'Curves can be drawn by snapping to previous Footprinted or Templated curves. Setting the Snap Options to Snap consolidate will create dependencies on those curves.\\n\\nIn this example, the Hood was drawn first. The Hood Curve SOP was wired into the Side Panel Curve SOP. When the Side Panel was created, Hood was footprinted and snapping was on. All the snapped points became dependent on the Hood.\\n\\nNow, whenever you move dependent points on the Hood, the Side Panel points will follow. \\n\\nThe same is true for the Front Panel. Since both the Hood and Side Panel were Footprinted, they were Merged and wired into the Front Panel curve to create the dependencies.' $_obj_FuseHood1_Hood_side_panel\nopcolor -c 0.60000002384185791 0.60000002384185791 1 $_obj_FuseHood1_Hood_side_panel\nopset -d off -r off -h on -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_FuseHood1_Hood_side_panel\nopexprlanguage -s hscript $_obj_FuseHood1_Hood_side_panel\nopuserdata -n '___Version___' -v '19.0.383' $_obj_FuseHood1_Hood_side_panel\n\n# Node $_obj_FuseHood1_Hood_front_panel (Sop/curve)\nset _obj_FuseHood1_Hood_front_panel = `run(\"opadd -e -n -v curve front_panel\")`\noplocate -x `$arg2 + -7.8658799999999998` -y `$arg3 + 20.1386` $_obj_FuseHood1_Hood_front_panel\nopparm -V 19.0.383 $_obj_FuseHood1_Hood_front_panel coords ( 'p0 p12 p11 p10 p30 p29 0.544124,0.156058,1.48742 0.288714,0.159587,1.60509 -0.00256508,0.164449,1.61727 ' ) close ( on ) tolerance ( 0.0099999997799999994 )\nopcomment -c 'The Front Panel points are dependent on the points of both the Hood and Side Panel because the were merged.' $_obj_FuseHood1_Hood_front_panel\nopcolor -c 0 0.53299999237060547 0 $_obj_FuseHood1_Hood_front_panel\nopset -d off -r off -h on -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_FuseHood1_Hood_front_panel\nopexprlanguage -s hscript $_obj_FuseHood1_Hood_front_panel\nopuserdata -n '___Version___' -v '19.0.383' $_obj_FuseHood1_Hood_front_panel\n\n# Node $_obj_FuseHood1_Hood_merge4 (Sop/merge)\nset _obj_FuseHood1_Hood_merge4 = `run(\"opadd -e -n -v merge merge4\")`\noplocate -x `$arg2 + -7.8658799999999998` -y `$arg3 + 21.6846` $_obj_FuseHood1_Hood_merge4\nopcomment -c 'Merge the Hood and Side Panel curves.' $_obj_FuseHood1_Hood_merge4\nopcolor -c 0.60000002384185791 0.40000000596046448 0.20000000298023224 $_obj_FuseHood1_Hood_merge4\nopset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_FuseHood1_Hood_merge4\nopexprlanguage -s hscript $_obj_FuseHood1_Hood_merge4\nopuserdata -n '___Version___' -v '19.0.383' $_obj_FuseHood1_Hood_merge4\n\n# Node $_obj_FuseHood1_Hood_merge_all (Sop/merge)\nset _obj_FuseHood1_Hood_merge_all = `run(\"opadd -e -n -v merge merge_all\")`\noplocate -x `$arg2 + -10.408200000000001` -y `$arg3 + 16.396599999999999` $_obj_FuseHood1_Hood_merge_all\nopcomment -c 'Merge the Hood, Side Panel, and Front Panel curves.' $_obj_FuseHood1_Hood_merge_all\nopcolor -c 0.20000000298023224 0 0.40000000596046448 $_obj_FuseHood1_Hood_merge_all\nopset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_FuseHood1_Hood_merge_all\nopexprlanguage -s hscript $_obj_FuseHood1_Hood_merge_all\nopuserdata -n '___Version___' -v '19.0.383' $_obj_FuseHood1_Hood_merge_all\n\n# Node $_obj_FuseHood1_Hood_hood (Sop/curve)\nset _obj_FuseHood1_Hood_hood = `run(\"opadd -e -n -v curve hood\")`\noplocate -x `$arg2 + -10.408200000000001` -y `$arg3 + 24.746500000000001` $_obj_FuseHood1_Hood_hood\nopparm -V 19.0.383 $_obj_FuseHood1_Hood_hood coords ( '-0.00302161,0.264306,1.62641 -0.00302161,0.398811,1.25001 -0.00302161,0.475854,0.893426 0.20791,0.46679,0.878516 0.479158,0.475854,0.785561 0.566019,0.460375,0.683461 0.602014,0.455005,0.603108 0.629255,0.461156,0.897085 0.615635,0.456235,1.00287 0.604424,0.410724,1.19468 0.563564,0.333322,1.36902 0.531806,0.281722,1.48742 0.283217,0.271939,1.6023 ' ) close ( on ) tolerance ( 0.0099999997799999994 )\nopcomment -c 'A closed curve was created for the hood.' $_obj_FuseHood1_Hood_hood\nopcolor -c 0 0.20000000298023224 0.60000002384185791 $_obj_FuseHood1_Hood_hood\nopset -d off -r off -h on -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_FuseHood1_Hood_hood\nopexprlanguage -s hscript $_obj_FuseHood1_Hood_hood\nopuserdata -n '___Version___' -v '19.0.383' $_obj_FuseHood1_Hood_hood\n\n# Node $_obj_FuseHood1_Hood_DO_NOT_RENDER (Sop/null)\nset _obj_FuseHood1_Hood_DO_NOT_RENDER = `run(\"opadd -e -n -v null DO_NOT_RENDER\")`\noplocate -x `$arg2 + -14.410600000000001` -y `$arg3 + 24.710100000000001` $_obj_FuseHood1_Hood_DO_NOT_RENDER\nopcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_FuseHood1_Hood_DO_NOT_RENDER\nopset -d off -r on -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_FuseHood1_Hood_DO_NOT_RENDER\nopexprlanguage -s hscript $_obj_FuseHood1_Hood_DO_NOT_RENDER\nopuserdata -n '___Version___' -v '19.0.383' $_obj_FuseHood1_Hood_DO_NOT_RENDER\n\n# Node $_obj_FuseHood1_Hood_fuse1 (Sop/fuse::2.0)\nset _obj_FuseHood1_Hood_fuse1 = `run(\"opadd -e -n -v fuse::2.0 fuse1\")`\noplocate -x `$arg2 + -10.222899999999999` -y `$arg3 + 14.828799999999999` $_obj_FuseHood1_Hood_fuse1\nopparm $_obj_FuseHood1_Hood_fuse1  numpointattribs ( 0 ) numgroups ( 0 )\nopset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_FuseHood1_Hood_fuse1\nopexprlanguage -s hscript $_obj_FuseHood1_Hood_fuse1\nopuserdata -n '___Version___' -v '19.0.383' $_obj_FuseHood1_Hood_fuse1\n\n# Sticky Note sticky1\npython -c 'hou.pwd().createStickyNote(\"sticky1\")'\npython -c 'hou.pwd().findStickyNote(\"sticky1\").setColor(hou.Color((0, 0.2, 0.6)))'\npython -c 'hou.pwd().findStickyNote(\"sticky1\").setText(\"A closed curve was created for the hood\")'\npython -c 'hou.pwd().findStickyNote(\"sticky1\").setTextSize(0)'\npython -c 'hou.pwd().findStickyNote(\"sticky1\").setTextColor(hou.Color((0, 0, 0)))'\npython -c 'hou.pwd().findStickyNote(\"sticky1\").setDrawBackground(True)'\npython -c 'hou.pwd().findStickyNote(\"sticky1\").setPosition(hou.Vector2(-10.6305, 25.8269))'\npython -c 'hou.pwd().findStickyNote(\"sticky1\").setSize(hou.Vector2(2.35294, 1))'\npython -c 'hou.pwd().findStickyNote(\"sticky1\").setMinimized(False)'\n\n# Sticky Note sticky2\npython -c 'hou.pwd().createStickyNote(\"sticky2\")'\npython -c 'hou.pwd().findStickyNote(\"sticky2\").setColor(hou.Color((0.6, 0.6, 1)))'\npython -c 'hou.pwd().findStickyNote(\"sticky2\").setText(\"Curves can be drawn by snapping to previous Footprinted curves. Setting the Snap Options to Snap consolidate will create dependencies on those curves.\\n\\nIn this example, the Hood was drawn first. The Hood Curve SOP was wired into the Side Panel Curve SOP. When the Side Panel was created, Hood was footprinted and snapping was on. All the snapped ponts became dependent on the Hood.\\n\\nNow, whenever you move dependent points on the Hood, the Side Panel points will follow.\\n\\nThe same is true for the Front Panel. Since both the Hood and Side Panel were Footprinted, they were Merged and wired into the Front Panel curve to create the dependencies.\")'\npython -c 'hou.pwd().findStickyNote(\"sticky2\").setTextSize(0)'\npython -c 'hou.pwd().findStickyNote(\"sticky2\").setTextColor(hou.Color((0, 0, 0)))'\npython -c 'hou.pwd().findStickyNote(\"sticky2\").setDrawBackground(True)'\npython -c 'hou.pwd().findStickyNote(\"sticky2\").setPosition(hou.Vector2(-6.87128, 23.0304))'\npython -c 'hou.pwd().findStickyNote(\"sticky2\").setSize(hou.Vector2(5.38729, 4.15059))'\npython -c 'hou.pwd().findStickyNote(\"sticky2\").setMinimized(False)'\n\n# Sticky Note sticky3\npython -c 'hou.pwd().createStickyNote(\"sticky3\")'\npython -c 'hou.pwd().findStickyNote(\"sticky3\").setColor(hou.Color((0.6, 0.4, 0.2)))'\npython -c 'hou.pwd().findStickyNote(\"sticky3\").setText(\"Merge the hood and side panel curves\")'\npython -c 'hou.pwd().findStickyNote(\"sticky3\").setTextSize(0)'\npython -c 'hou.pwd().findStickyNote(\"sticky3\").setTextColor(hou.Color((0, 0, 0)))'\npython -c 'hou.pwd().findStickyNote(\"sticky3\").setDrawBackground(True)'\npython -c 'hou.pwd().findStickyNote(\"sticky3\").setPosition(hou.Vector2(-5.70544, 21.6361))'\npython -c 'hou.pwd().findStickyNote(\"sticky3\").setSize(hou.Vector2(2.35294, 1))'\npython -c 'hou.pwd().findStickyNote(\"sticky3\").setMinimized(False)'\n\n# Sticky Note sticky4\npython -c 'hou.pwd().createStickyNote(\"sticky4\")'\npython -c 'hou.pwd().findStickyNote(\"sticky4\").setColor(hou.Color((0, 0.533, 0)))'\npython -c 'hou.pwd().findStickyNote(\"sticky4\").setText(\"The Front Panel points are dependent on the points of both the Hood and Side Panel because they were merged.  \")'\npython -c 'hou.pwd().findStickyNote(\"sticky4\").setTextSize(0)'\npython -c 'hou.pwd().findStickyNote(\"sticky4\").setTextColor(hou.Color((0, 0, 0)))'\npython -c 'hou.pwd().findStickyNote(\"sticky4\").setDrawBackground(True)'\npython -c 'hou.pwd().findStickyNote(\"sticky4\").setPosition(hou.Vector2(-5.57553, 19.7017))'\npython -c 'hou.pwd().findStickyNote(\"sticky4\").setSize(hou.Vector2(2.55294, 1.31765))'\npython -c 'hou.pwd().findStickyNote(\"sticky4\").setMinimized(False)'\n\n# Sticky Note sticky5\npython -c 'hou.pwd().createStickyNote(\"sticky5\")'\npython -c 'hou.pwd().findStickyNote(\"sticky5\").setColor(hou.Color((0.2, 0, 0.4)))'\npython -c 'hou.pwd().findStickyNote(\"sticky5\").setText(\"Merge the Hood, Side Panel, and Front Panel curves\")'\npython -c 'hou.pwd().findStickyNote(\"sticky5\").setTextSize(0)'\npython -c 'hou.pwd().findStickyNote(\"sticky5\").setTextColor(hou.Color((0, 0, 0)))'\npython -c 'hou.pwd().findStickyNote(\"sticky5\").setDrawBackground(True)'\npython -c 'hou.pwd().findStickyNote(\"sticky5\").setPosition(hou.Vector2(-7.5222, 16.1829))'\npython -c 'hou.pwd().findStickyNote(\"sticky5\").setSize(hou.Vector2(1.82353, 1.15686))'\npython -c 'hou.pwd().findStickyNote(\"sticky5\").setMinimized(False)'\n\n# Sticky Note sticky6\npython -c 'hou.pwd().createStickyNote(\"sticky6\")'\npython -c 'hou.pwd().findStickyNote(\"sticky6\").setColor(hou.Color((1, 0.6, 0.6)))'\npython -c 'hou.pwd().findStickyNote(\"sticky6\").setText(\"Notice the change in point number from the merge_all SOP to the fuse1 SOP. Do this by turning on point numbers in the display.\\n\\nAlthough points on the curves are dependent on each other, they are still unique. In order to consolidate the points, this Fuse SOP is needed.\")'\npython -c 'hou.pwd().findStickyNote(\"sticky6\").setTextSize(0)'\npython -c 'hou.pwd().findStickyNote(\"sticky6\").setTextColor(hou.Color((0, 0, 0)))'\npython -c 'hou.pwd().findStickyNote(\"sticky6\").setDrawBackground(True)'\npython -c 'hou.pwd().findStickyNote(\"sticky6\").setPosition(hou.Vector2(-11.3153, 10.6767))'\npython -c 'hou.pwd().findStickyNote(\"sticky6\").setSize(hou.Vector2(3.45098, 2.81372))'\npython -c 'hou.pwd().findStickyNote(\"sticky6\").setMinimized(False)'\noporder -e side_panel front_panel merge4 merge_all hood DO_NOT_RENDER fuse1 \nopcf ..\nopset -p on $_obj_FuseHood1_Hood\n\nopcf $arg1\nopcf $_obj_FuseHood1_Hood\nopwire -n $_obj_FuseHood1_Hood_hood -0 $_obj_FuseHood1_Hood_side_panel\nopwire -n $_obj_FuseHood1_Hood_merge4 -0 $_obj_FuseHood1_Hood_front_panel\nopwire -n $_obj_FuseHood1_Hood_hood -0 $_obj_FuseHood1_Hood_merge4\nopwire -n $_obj_FuseHood1_Hood_side_panel -1 $_obj_FuseHood1_Hood_merge4\nopwire -n $_obj_FuseHood1_Hood_hood -0 $_obj_FuseHood1_Hood_merge_all\nopwire -n $_obj_FuseHood1_Hood_side_panel -1 $_obj_FuseHood1_Hood_merge_all\nopwire -n $_obj_FuseHood1_Hood_front_panel -2 $_obj_FuseHood1_Hood_merge_all\nopwire -n $_obj_FuseHood1_Hood_merge_all -0 $_obj_FuseHood1_Hood_fuse1\nopcf ..\n\nset oidx = 0\nif ($argc >= 9 && \"$arg9\" != \"\") then\n    set oidx = $arg9\nendif\n\nif ($argc >= 5 && \"$arg4\" != \"\") then\n    set output = $_obj_FuseHood1_Hood\n    opwire -n $output -$arg5 $arg4\nendif\nif ($argc >= 6 && \"$arg6\" != \"\") then\n    set input = $_obj_FuseHood1_Hood\n    if ($arg8) then\n        opwire -n -i $arg6 -0 $input\n    else\n        opwire -n -o $oidx $arg6 -0 $input\n    endif\nendif\nopcf $saved_path\n'''\nhou.hscript(h_preamble + h_extra_args + h_cmd)\n"
    },
    {
        "QHTWTextEdit": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\np, li { white-space: pre-wrap; }\n</style></head><body style=\" font-family:'Segoe UI'; font-size:10pt; font-weight:400; font-style:normal;\">\n<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:'tahoma','Microsoft YaHei','微软雅黑','宋体','Malgun Gothic','sans-serif'; font-size:14px; color:#333333; background-color:#f7f8fa;\">这个例子展示了如何使用Fuse SOP来巩固唯一曲线之间的点。</span></p>\n<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:'tahoma','Microsoft YaHei','微软雅黑','宋体','Malgun Gothic','sans-serif'; font-size:14px; color:#333333; background-color:#f7f8fa;\">汽车引擎盖的三个面板创建，然后熔接在一起使用Fuse SOP。</span></p></body></html>"
    },
    {
        "QHWUrlImage": "http://127.0.0.1:48626/images/shelf/fuse_before.jpg"
    },
    {
        "QHWUrlImage": "http://127.0.0.1:48626/images/shelf/fuse_after.jpg"
    },
    {
        "QHTWTextEdit": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\np, li { white-space: pre-wrap; }\n</style></head><body style=\" font-family:'Segoe UI'; font-size:10pt; font-weight:400; font-style:normal;\">\n<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">融合工具可以让模型融合</p></body></html>"
    }
]